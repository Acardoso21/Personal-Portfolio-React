name: Development Pipeline

on:
  push:
    branches-ignore:
      - master  # Excludes 'master' branch to prevent interference with production
  pull_request:
    branches-ignore:
      - master  # Also ignores pull requests targeting 'master'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
        #   cache: 'npm'  # Uncomment if you want to cache npm dependencies for faster builds

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Step 4: Run ESLint with npx
      - name: Run ESLint
        run: |
          npx eslint 'src/**/*.{js,jsx}'  # Use npx to ensure it runs the locally installed ESLint

      # Step 5: Run Prettier (optional) with npx
      - name: Run Prettier
        run: |
          npx prettier --write 'src/**/*.{js,jsx}'  # Use npx to run Prettier locally

      # Step 6: Run tests (allow to fail)
      - name: Run tests
        run: |
          npm test
        continue-on-error: true  # This allows the pipeline to continue even if the test step fails

    # Step  6: Build the app (Optional)
      - name: Build the app
        run: |
            npm run build
            - name: Merge master into active branch
      - name: check if main got updated
        run: |
          # Ensure we're on the active branch
          git checkout ${{ github.ref_name }}
      
          # Fetch the latest changes from master
          git fetch origin master
      
          # Merge master into the active branch, preferring changes in the active branch
          git merge -X ours origin/master -m "Merge master into ${{ github.ref_name }} (favoring active branch)"
      
          # Push the merge result back to the active branch
          git push origin ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

            
